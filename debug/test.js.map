{"version":3,"sources":["test.ts"],"names":["jestConfig","args","process","env","NODE_ENV","cwd","userJestConfigFiles","map","configName","path","join","userJestConfig","find","configCwd","fs","existsSync","config","require","result","JSON","stringify","results","success"],"mappings":";;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;AAEA,MAAMA,UAAU,GAAG,CAAC,gBAAD,EAAmB,gBAAnB,CAAnB;;;;;;;2BAEe,WAAgBC,IAAhB,EAA2C;AAAA;;AACxDC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,MAAvB;AACA,UAAMC,GAAG,gBAAGJ,IAAI,CAACI,GAAR,iDAAeH,OAAO,CAACG,GAAR,EAAxB;AAEA,UAAMC,mBAAmB,GAAGN,UAAU,CAACO,GAAX,CAAgBC,UAAD,IACzCC,gBAAKC,IAAL,CAAUL,GAAV,EAAeG,UAAf,CAD0B,CAA5B;AAIA,UAAMG,cAAc,GAAGL,mBAAmB,CAACM,IAApB,CAA0BC,SAAD,IAC9CC,cAAGC,UAAH,CAAcF,SAAd,CADqB,CAAvB;;AAIA,QAAIF,cAAJ,EAAoB;AAClB,gCAAcA,cAAd;AACD;;AAED,UAAMK,MAAM,GAAG,wBACb,yBAAcX,GAAd,EAAmBJ,IAAnB,CADa,EAEb,sBAAUU,cAAc,GAAGM,OAAO,CAACN,cAAD,CAAV,GAA6B,EAArD,CAFa,CAAf,CAhBwD,CAqBxD;AACA;;AACA,UAAMO,MAAM,SAAS;AACnBF,MAAAA,MAAM,EAAEG,IAAI,CAACC,SAAL,CAAeJ,MAAf;AADW,OAEhBf,IAFgB,GAGnB,CAACI,GAAD,CAHmB,CAArB;AAKA,2BAAOa,MAAM,CAACG,OAAP,CAAeC,OAAtB,EAA+B,uBAA/B;AACD,G","file":"test.js","sourcesContent":["import yargsParser from 'yargs-parser'\nimport { runCLI } from 'jest'\nimport assert from 'assert'\nimport path from 'path'\nimport fs from 'fs'\n\nimport { registerBabel, isDefault, mergeConfig } from './utils'\nimport defaultConfig from './jestConfig'\n\nconst jestConfig = ['jest.config.js', 'jest.config.ts']\n\nexport default async function (args: yargsParser.Arguments) {\n  process.env.NODE_ENV = 'test'\n  const cwd = args.cwd ?? process.cwd()\n\n  const userJestConfigFiles = jestConfig.map((configName) =>\n    path.join(cwd, configName)\n  )\n\n  const userJestConfig = userJestConfigFiles.find((configCwd) =>\n    fs.existsSync(configCwd)\n  )\n\n  if (userJestConfig) {\n    registerBabel(userJestConfig)\n  }\n\n  const config = mergeConfig(\n    defaultConfig(cwd, args),\n    isDefault(userJestConfig ? require(userJestConfig) : {})\n  )\n\n  // prettier-ignore\n  // Run jest\n  const result = await runCLI({\n    config: JSON.stringify(config),\n    ...args\n  },[cwd])\n\n  assert(result.results.success, `Test with jest failed`)\n}\n"],"sourceRoot":"/Users/zoy/zmi-nerd/src"}