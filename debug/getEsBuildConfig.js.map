{"version":3,"sources":["getEsBuildConfig.ts"],"names":["getEsBuildConfig","bundleOpts","isBrowser","path","nodeVersion","sourceMaps","loader","slice","target","format","treeShaking","sourcemap"],"mappings":";;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEc,SAAUA,gBAAV,CACZC,UADY,EAEZC,SAFY,EAGZC,IAHY,EAGA;AAAA,QAQJC,WARI,GAQwBH,UARxB,CAQJG,WARI;AAAA,QAQSC,UART,GAQwBJ,UARxB,CAQSI,UART;AAUZ,SAAO;AACLC,IAAAA,MAAM,EAAE,qBAAQH,IAAR,EAAcI,KAAd,CAAoB,CAApB,CADH;AAELC,IAAAA,MAAM,EAAEN,SAAS,GAAG,UAAH,GAAgB,OAAOE,WAAP,aAAOA,WAAP,cAAOA,WAAP,GAAsB,CAAC,EAFnD;AAGLK,IAAAA,MAAM,EAAEP,SAAS,GAAG,KAAH,GAAW,KAHvB;AAILQ,IAAAA,WAAW,EAAE,IAJR;AAKLC,IAAAA,SAAS,EAAEN;AALN,GAAP;AAOD","file":"getEsBuildConfig.js","sourcesContent":["import type { IBundleOptions } from './types'\nimport { extname } from 'path'\n\nexport default function getEsBuildConfig(\n  bundleOpts: IBundleOptions,\n  isBrowser: boolean,\n  path: string\n): {\n  loader: 'ts' | 'js' | 'jsx' | 'tsx'\n  target: string\n  format: 'esm' | 'cjs'\n  treeShaking: true\n  sourcemap: boolean | 'inline'\n} {\n  const { nodeVersion, sourceMaps } = bundleOpts\n\n  return {\n    loader: extname(path).slice(1) as 'ts' | 'js' | 'jsx' | 'tsx',\n    target: isBrowser ? 'chrome58' : `node${nodeVersion ?? 6}`,\n    format: isBrowser ? 'esm' : 'cjs',\n    treeShaking: true,\n    sourcemap: sourceMaps!\n  }\n}\n"],"sourceRoot":"/Users/zoy/zmi-nerd/src"}